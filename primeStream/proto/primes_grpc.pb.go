// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: primes.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GeneratePrimeServiceClient is the client API for GeneratePrimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GeneratePrimeServiceClient interface {
	GetPrimeNumber(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (GeneratePrimeService_GetPrimeNumberClient, error)
}

type generatePrimeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGeneratePrimeServiceClient(cc grpc.ClientConnInterface) GeneratePrimeServiceClient {
	return &generatePrimeServiceClient{cc}
}

func (c *generatePrimeServiceClient) GetPrimeNumber(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (GeneratePrimeService_GetPrimeNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &GeneratePrimeService_ServiceDesc.Streams[0], "/primes.GeneratePrimeService/GetPrimeNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &generatePrimeServiceGetPrimeNumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GeneratePrimeService_GetPrimeNumberClient interface {
	Recv() (*PrimeResponse, error)
	grpc.ClientStream
}

type generatePrimeServiceGetPrimeNumberClient struct {
	grpc.ClientStream
}

func (x *generatePrimeServiceGetPrimeNumberClient) Recv() (*PrimeResponse, error) {
	m := new(PrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GeneratePrimeServiceServer is the server API for GeneratePrimeService service.
// All implementations must embed UnimplementedGeneratePrimeServiceServer
// for forward compatibility
type GeneratePrimeServiceServer interface {
	GetPrimeNumber(*PrimeRequest, GeneratePrimeService_GetPrimeNumberServer) error
	mustEmbedUnimplementedGeneratePrimeServiceServer()
}

// UnimplementedGeneratePrimeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGeneratePrimeServiceServer struct {
}

func (UnimplementedGeneratePrimeServiceServer) GetPrimeNumber(*PrimeRequest, GeneratePrimeService_GetPrimeNumberServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPrimeNumber not implemented")
}
func (UnimplementedGeneratePrimeServiceServer) mustEmbedUnimplementedGeneratePrimeServiceServer() {}

// UnsafeGeneratePrimeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GeneratePrimeServiceServer will
// result in compilation errors.
type UnsafeGeneratePrimeServiceServer interface {
	mustEmbedUnimplementedGeneratePrimeServiceServer()
}

func RegisterGeneratePrimeServiceServer(s grpc.ServiceRegistrar, srv GeneratePrimeServiceServer) {
	s.RegisterService(&GeneratePrimeService_ServiceDesc, srv)
}

func _GeneratePrimeService_GetPrimeNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GeneratePrimeServiceServer).GetPrimeNumber(m, &generatePrimeServiceGetPrimeNumberServer{stream})
}

type GeneratePrimeService_GetPrimeNumberServer interface {
	Send(*PrimeResponse) error
	grpc.ServerStream
}

type generatePrimeServiceGetPrimeNumberServer struct {
	grpc.ServerStream
}

func (x *generatePrimeServiceGetPrimeNumberServer) Send(m *PrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

// GeneratePrimeService_ServiceDesc is the grpc.ServiceDesc for GeneratePrimeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GeneratePrimeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "primes.GeneratePrimeService",
	HandlerType: (*GeneratePrimeServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPrimeNumber",
			Handler:       _GeneratePrimeService_GetPrimeNumber_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "primes.proto",
}
